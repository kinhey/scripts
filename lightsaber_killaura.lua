-- This file was generated using Luraph Obfuscator v13.5.4

do return(function(Dc,kc,Vc,Ic,Pc,tc,Bc,Ac,wc,zc,Qc,Wc,Mc,lc,sc,dc,ic,fc,Yc,Ec,Hc,Tc,ec,jc,uc,Jc,hc,Oc,gc,rc,oc,mc,Kc,Uc,cc,Cc,...)local b,i,G=tonumber,Cc,tc;local q=Ac;local v,f=pcall,mc;local x,A,E=error,cc,(rc);local C,vc,c=nil,nil,(nil);for qd=0,2 do if not(qd<=0x00000)then if qd==0X001 then vc={};do continue;end;else c=Tc;do continue;end;end;else C=Pc.rep;end;end;local e=(rawset);local t,ac=string.gsub,(2);local g,T,M,j,r=nil,nil,nil,nil,nil;local B=bit32.bxor;repeat do if ac<=1 then do if ac~=0x0 then j=Wc;ac=0X3;continue;else T=hc;ac=0x0004;end;end;else if ac<=2 then g=ec;ac=0;continue;elseif ac~=3 then M=4294967296;ac=1;else r=kc.insert;ac=5;end;end;end;until ac>=5;local W=(zc.wrap);local z=jc;local R=tostring;do ac=0X00;end;local p,Fc,H,m,D=nil,nil,nil,nil,(nil);do while true do if ac<=1 then do if ac~=0 then H=0X1;do ac=4;end;continue;else p={[1]=Ec,[7]="\Fn\ \084",[fc]='4G!\071\057\e|\}',[4]=796576330,[0]=1250620083,[0x1]=0X000,[3]='\S\ ef\046\R^',[3]=6,[1]='vx\X',[Dc]=0X00fc18A8D,[fc]=0X0009,[1]=0X1,[1]="\c\/\>\KA\P",[4]=1,[0X0]=6,[0x003]=Hc,[0x5]=6,[0X001]=1,[0x8]=3,[0X7]=3};ac=3;end;end;else if not(ac<=2)then do if ac==3 then Fc={};ac=1;do continue;end;else m=Oc;do ac=0X0002;end;do continue;end;end;end;else D=f();do break;end;end;end;end;end;ac=0X01;local O=(nil);while ac~=0X2 do do if ac~=0X00 then ac=0;continue;elseac=2;end;end;end;local bc,a=nil,(nil);do for wx=0X0,0X1 do if wx==0X0 then bc=function(...)return q(Uc,...),{...};end;else a=Jc;end;end;end;local d,U,J,K,l,Y,o,s=M-0X1,nil,nil,nil,nil,nil,nil,(nil);for yw=0,8 do do if yw<=3 then if not(yw<=1)then do if yw~=2 then K=0x80000000;else J=function()local Jb=(A(O,H,H));local sb=(0x0);repeat if sb~=0X0000 then return Jb;else H=H+1;sb=0X00001;end;until(false);end;end;end;else if yw==0 then else O=t(G(O,0X5),"..",function(sB)if A(sB,Yc)~=0X48 then local Ym=(m(b(sB,0X10)));if U then local sf=(C(Ym,U));do U=nil;end;return sf;else return Ym;end;else U=b(G(sB,0X01,0X1));return Kc;end;end);end;end;elseif not(yw<=0X5)then if yw<=6 then o={[0]=0x001};else if yw~=0x7 then s=function()local NR,UR=j(Mc,O,H);H=UR;return NR;end;else do local RC=nil;local CC=(0X1);while CC<=1 do do if CC==0x0 then do for E2=1,0X001f do local X2=(0X1);while(true)do if X2~=0X0 then o[E2]=RC;X2=0;continue;else RC=RC*0X2;break;end;end;end;end;do CC=0X2;end;continue;else RC=Yc;CC=0;end;end;end;end;continue;end;end;else if yw~=0X4 then do Y=function()local Sj,Hj=j("\<\0734",O,H);local Tj=(0);do while(true)do do if Tj==0 then H=Hj;Tj=0X1;continue;else return Sj;end;end;end;end;end;end;else l=2^52;end;end;end;end;local F=(lc);local V=(function(Qi,qi,ii)local xi,Ii=0x1,nil;while true do do if not(xi<=0)then if xi==1 then Ii=(Qi/o[qi])%o[ii];xi=0X00;else return Ii;end;else do Ii=Ii-Ii%0X1;end;xi=0x2;end;end;end;end);do ac=0;end;local w,Q,u=nil,nil,(nil);do repeat if ac<=0X0 then w=function()local Zc,Xc=j(dc,O,H);H=Xc;return Zc;end;ac=2;else if ac~=0x001 then Q=bit32.bor;ac=1;do continue;end;else u=Ic;do ac=3;end;end;end;until ac>2;end;local I=(K-1);local k,S,L,X,N=zc.yield,assert,nil,nil,(nil);do for ej=0,0x0002 do if ej<=0 then L={0X7,4,5};continue;else if ej==1 then X=function()local Id=0;local id=0;while true do local vW=(A(O,H,H));H=H+1;id=Q(id,u(g(vW,127),Id));if g(vW,128)~=0X0 then else do return id;end;end;Id=Id+7;end;end;continue;else do N=function()local PN=nil;local UN=1;do while(true)do if UN<=0X0 then if PN>I then return PN-M;end;UN=2;continue;else do if UN~=0X001 then return PN;else do PN=X();end;UN=0X0;end;end;end;end;end;end;end;end;end;end;end;local y=J();local Z=J();ac=0;local Sc,qc=nil,nil;while ac~=2 do if ac==0X0 then Sc=function(Rd)local jd=({A(O,H,H+0X003)});local Md=2;local Nd,Ad,cd=nil,nil,nil;repeat if not(Md<=0X00000)then if Md~=1 then do Nd=B(jd[0X1],Z);end;do Md=0X000;end;continue;else cd=B(jd[0X00003],Z);Md=0X003;continue;end;else Ad=B(jd[2],Z);Md=0X1;end;until Md==3;Md=0X000;local kd=(nil);while 0.36528678381932367 do if not(Md<=1)then if Md~=0X0002 then do Z=(0X0B9*Z+Rd)%oc;end;Md=1;else return kd*0X1000000+cd*0X10000+Ad*256+Nd;end;else do if Md==0X0 then kd=B(jd[4],Z);do Md=0x03;end;continue;else do H=H+0x4;end;Md=0x2;continue;end;end;end;end;end;ac=1;else qc=function(c4)local O4=(Y());local x4=(Kc);for az=1,O4,7997 do local dz=nil;for uL=0X0,0X00001 do do if uL==0x00000 then dz=az+7997-1;continue;else if dz>O4 then dz=O4;end;end;end;end;local Fz=({A(O,H+az-1,H+dz-Hc)});local oz=(1);while oz<0X2 do if oz~=0x0 then for bs=0X1,#Fz do local Ls=(0X00);while Ls~=2 do if Ls==0X0000 then Fz[bs]=B(Fz[bs],y);Ls=1;do continue;end;else y=(c4*y+0X61)%0X100;do Ls=0X0002;end;end;end;end;oz=0;else x4=x4..m(z(Fz));oz=0X2;end;end;end;H=H+O4;return x4;end;ac=0X2;continue;end;end;local h,P=next,(Vc);local nc=Hc;ac=1;local Rc,xc,Gc=nil,nil,(nil);while-2069256000 do if ac<=2 then if not(ac<=0)then if ac~=1 then vc=sc;do ac=0X0006;end;else do ac=5;end;do continue;end;end;else do Gc=xc();end;ac=3;end;else if not(ac<=4)then do if ac~=5 then do return Rc(D,Gc,sc)(...);end;else function Rc(W1,p1,g1)local d1,N1=p1[7],p1[6];local f1=p1[8];local O1,r1=p1[0X02],p1[0X3];local o1=(p1[5]);local u1,T1=p1[4],(p1[0X009]);local q1=P({},{__mode="v"});local H1=nil;if T1==1 then H1=function(...)local Cy,Dy=0X0000,{};local Ty=(f());local ry=1;local Py,ky=bc(...);Py=Py-1;local Gy=(Ty==D and W1 or Ty);do for vw=0,Py do if r1>vw then Dy[vw]=ky[vw+0X1];else break;end;end;end;(Fc)[3]=p1;Fc[4]=Dy;if not o1 then ky=nil;elseif not(u1)then else(Dy)[r1]={n=Py>=r1 and Py-r1+0X001 or 0x0,z(ky,r1+0X001,Py+1)};end;if Gy~=Ty then E(H1,Gy);end;local Sy,Oy,yy,Xy=v(function()while true do local PB=f1[ry];local fB=(PB[0x2]);ry=ry+0x1;if fB>=44 then if not(fB<66)then do if fB>=77 then if not(fB<83)then if fB>=0X056 then if not(fB>=0X57)then Dy[PB[0x5]]=Dy[PB[4]]>=Dy[PB[7]];else do if fB==88 then(Dy)[PB[5]]=Dy[PB[0X004]]/Dy[PB[7]];else(Dy)[PB[5]]={z({},1,PB[0X4])};end;end;end;else if fB>=84 then do if fB~=85 then local uX,hX=PB[5],(PB[0x004]);Cy=uX+hX-1;do repeat local T8,v8=q1,Dy;if#T8>0 then local cn={};for AQ,rQ in h,T8 do for fq,wq in h,rQ do if not(wq[0X1]==v8 and wq[2]>=0x00)then else local X2=wq[2];if not(not cn[X2])then else do(cn)[X2]={v8[X2]};end;end;do wq[1]=cn[X2];end;wq[2]=1;end;end;end;end;until true;end;return true,uX,hX;else if PB[7]==0x87 then ry=ry-1;do f1[ry]={[5]=(PB[5]-0X001d),[2]=0X0015,[4]=(PB[4]-0x1d)};end;elseif PB[0X7]==46 then ry=ry-1;f1[ry]={[0X00004]=(PB[0X4]-0X8),[0X5]=(PB[0X5]-8),[0x2]=0X000046};elseif PB[0x7]~=0x14 then repeat local Ot,lt=q1,(Dy);if#Ot>0 then local Lw={};do for yW,LW in h,Ot do do for jZ,qZ in h,LW do do if qZ[0X1]==lt and qZ[2]>=0x00 then local v1=(qZ[0X0002]);if not Lw[v1]then(Lw)[v1]={lt[v1]};end;do qZ[1]=Lw[v1];end;(qZ)[2]=1;end;end;end;end;end;end;end;until true;do return;end;else ry=ry-0X001;do(f1)[ry]={[0X5]=(PB[0X5]-52),[2]=41,[0X4]=(PB[4]-52)};end;end;end;end;else if PB[7]~=87 then do repeat local A2,f2=q1,Dy;if not(#A2>0X00)then else local Mh={};for Vx,dx in h,A2 do for cv,Tv in h,dx do if not(Tv[0x01]==f2 and Tv[0X2]>=0X00000)then else local lG=Tv[2];if not(not Mh[lG])then else Mh[lG]={f2[lG]};end;Tv[1]=Mh[lG];Tv[2]=0x001;end;end;end;end;until true;end;local VS=PB[5];return false,VS,VS+PB[4]-0X002;else ry=ry-1;f1[ry]={[0X0002]=0x29,[5]=(PB[0X00005]-131),[0x4]=(PB[4]-131)};end;end;end;else if fB>=80 then do if fB>=81 then do if fB~=82 then do(Dy)[PB[5]]=u(Dy[PB[4]],Dy[PB[0X7]]);end;else local GX=PB[0x5];local KX=W(function(...)(k)();for nw,Dw in...do k(true,nw,Dw);end;end);(KX)(Dy[GX],Dy[GX+1],Dy[GX+0X2]);Cy=GX;Dy[GX]=KX;ry=PB[4];end;end;else(Dy)[PB[0X0005]]=i(Dy[PB[0X04]]);end;end;else do if not(fB<0X04E)then do if fB==79 then if PB[7]~=178 then if not(Dy[PB[0X5]])then else ry=PB[0X4];end;else ry=ry-1;do(f1)[ry]={[0X00002]=0X55,[5]=(PB[5]-0X088),[4]=(PB[4]-136)};end;end;else(Dy)[PB[0X5]]=Dy[PB[0X004]]*Dy[PB[0X7]];end;end;else Dy[PB[0X5]]=Gy[PB[1]];end;end;end;end;else if not(fB<71)then if fB<74 then if not(fB>=72)then if not(Dy[PB[0X4]]<Dy[PB[0X00007]])then do ry=PB[5];end;end;else if fB==0X49 then(Dy)[PB[5]]=g(Dy[PB[4]],Dy[PB[0x00007]]);else if not Dy[PB[0X005]]then ry=PB[4];end;end;end;else if not(fB<75)then if fB==0X004C then(Dy)[PB[5]]={};else local X7=Dy[PB[4]]/Dy[PB[0x7]];Dy[PB[0X005]]=X7-X7%0X1;end;else Cy=PB[0X0005];do(Dy)[Cy]=Dy[Cy]();end;end;end;else if fB<0X44 then if fB~=67 then Dy[PB[5]]=true;else local Iw=(PB[0X005]);Dy[Iw](Dy[Iw+1],Dy[Iw+2]);Cy=Iw-1;end;else do if not(fB<0X045)then if fB==0x00046 then if PB[0X7]==93 then ry=ry-0x1;f1[ry]={[0x00005]=(PB[5]-0x00Cf),[2]=15,[0x4]=(PB[4]-207)};else(Dy)[PB[5]]=Dy[PB[0X4]];end;else(Dy)[PB[5]]=a(Dy[PB[4]],Dy[PB[0X7]]);end;else(Dy)[PB[0X5]]=Dy[PB[0X4]]<=Dy[PB[7]];end;end;end;end;end;end;else do if fB<0X37 then if fB>=49 then if not(fB<52)then do if fB<53 then Dy[PB[5]]=Dy[PB[4]]~=PB[3];else if fB~=54 then Dy[PB[5]]=Q(Dy[PB[4]],Dy[PB[7]]);else local QK=g1[PB[0X4]];Dy[PB[5]]=QK[1][QK[0x00002]];end;end;end;else if not(fB>=50)then if not(not(PB[0X1]<Dy[PB[7]]))then else do ry=PB[5];end;end;else if fB~=51 then local wB=(PB[5]);Dy[wB](z(Dy,wB+0x0001,Cy));do Cy=wB-1;end;else local ux=(g1[PB[4]]);do ux[1][ux[0X2]]=Dy[PB[5]];end;end;end;end;else do if fB<46 then if fB~=45 then(Dy)[PB[5]]=Dy[PB[0X4]][PB[0X3]];else Dy[PB[5]][Dy[PB[4]]]=PB[0X3];end;else do if fB>=0X2f then do if fB~=48 then local dW=PB[0x4];do Dy[PB[0X5]]=Dy[dW]..Dy[dW+1];end;else repeat local SG,CG,wG=q1,Dy,(PB[5]);if not(#SG>0X0)then else local yz={};for W7,N7 in h,SG do for Xj,Mj in h,N7 do if not(Mj[1]==CG and Mj[0x2]>=wG)then else local jw=(Mj[0X2]);do if not yz[jw]then(yz)[jw]={CG[jw]};end;end;(Mj)[0x1]=yz[jw];(Mj)[2]=1;end;end;end;end;until true;end;end;else(Dy)[PB[0X00005]]=Dy[PB[4]]~=Dy[PB[7]];end;end;end;end;end;else if not(fB>=0x00003C)then do if not(fB<0X39)then if not(fB>=58)then local Ep=PB[5];local Gp,sp=Dy[Ep]();do if Gp then ry=PB[0x4];do Dy[Ep+0X3]=sp;end;end;end;else if fB~=0x3b then local bZ=(PB[5]);local fZ=(Dy[bZ+0x0002]);local mZ=(Dy[bZ+0X1]);local sZ=Dy[bZ];(Dy)[bZ]=W(function()for SJ=sZ,mZ,fZ do(k)(true,SJ);end;end);ry=PB[0x004];else(Dy)[PB[5]]=B(Dy[PB[4]],Dy[PB[7]]);end;end;else if fB==0X00038 then do Dy[PB[5]]=Dy[PB[4]]%PB[3];end;else Dy[PB[5]]=Dy[PB[0X04]]%Dy[PB[7]];end;end;end;else if fB>=63 then if not(fB>=64)then do repeat local tm,xm=q1,Dy;if#tm>0 then local i8={};do for Gn,On in h,tm do for YZ,PZ in h,On do do if PZ[0X1]==xm and PZ[0X2]>=0 then local mN=PZ[0X0002];if not i8[mN]then(i8)[mN]={xm[mN]};end;PZ[0x001]=i8[mN];do(PZ)[2]=1;end;end;end;end;end;end;end;until true;end;return true,PB[0x5],1;else if fB~=0X41 then Fc[PB[4]]=Dy[PB[5]];else Dy[PB[5]]=Dy[PB[4]][Dy[PB[7]]];end;end;else if not(fB>=61)then if Dy[PB[0X4]]==Dy[PB[7]]then else ry=PB[5];end;else if fB==0X3E then local bw=(PB[5]);do Dy[bw]=Dy[bw](Dy[bw+1]);end;Cy=bw;else(Dy)[PB[0X00005]]=false;end;end;end;end;end;end;end;else if not(fB<22)then if not(fB>=0X21)then if fB>=27 then if fB>=0X0001E then do if fB<31 then(Dy[PB[0X00005]])[PB[0X1]]=Dy[PB[7]];else if fB~=0X020 then local Tj=PB[4];local nj=(Dy[Tj]);for l2=Tj+1,PB[0X7]do nj=nj..Dy[l2];end;do(Dy)[PB[5]]=nj;end;else if Dy[PB[4]]==PB[0X00003]then else do ry=PB[0X5];end;end;end;end;end;else if fB<28 then Dy[PB[0X5]]=Dy[PB[0X4]]+Dy[PB[7]];else if fB==0X1d then(Dy)[PB[0x00005]]=not Dy[PB[4]];else local yE=(PB[5]);do Dy[yE]=Dy[yE](z(Dy,yE+1,Cy));end;do Cy=yE;end;end;end;end;else do if not(fB>=24)then do if fB~=0x17 then local cP,oP=PB[0X5],Dy[PB[4]];Dy[cP+0X1]=oP;(Dy)[cP]=oP[PB[0x3]];else if Dy[PB[0x4]]~=PB[3]then else ry=PB[0x00005];end;end;end;else if not(fB<0X19)then do if fB==0X0001a then do(Dy)[PB[5]]=Dy[PB[0x4]]>Dy[PB[7]];end;else(Dy)[PB[5]]=Dy[PB[4]]^Dy[PB[7]];end;end;else repeat local sn,Xn=q1,(Dy);if not(#sn>0X0)then else local fy={};for AZ,eZ in h,sn do for id,Xd in h,eZ do if not(Xd[0x1]==Xn and Xd[2]>=0X0)then else local Io=(Xd[2]);do if not fy[Io]then do(fy)[Io]={Xn[Io]};end;end;end;(Xd)[1]=fy[Io];(Xd)[0x2]=0x0001;end;end;end;end;until true;return false,PB[5],Cy;end;end;end;end;else if not(fB>=0X26)then if not(fB<35)then if not(fB<0X024)then if fB~=37 then Dy[PB[0x005]]=PB[1];else repeat local dr,vr=q1,Dy;if not(#dr>0)then else local Kd=({});do for zB,JB in h,dr do for pC,CC in h,JB do if not(CC[0X0001]==vr and CC[0X2]>=0x0)then else local v2=(CC[0X2]);if not(not Kd[v2])then else Kd[v2]={vr[v2]};end;CC[0X00001]=Kd[v2];CC[0x2]=1;end;end;end;end;end;until true;return true,PB[5],0X0;end;else local wk=(PB[0X5]);local Mk=(PB[0X00007]-0X1)*0X32;local Ok=Dy[wk];for kn=0X0001,PB[4]do do Ok[Mk+kn]=Dy[wk+kn];end;end;end;else do if fB==34 then ry=PB[4];else(Dy)[PB[0X5]]=Fc[PB[4]];end;end;end;else if fB<41 then if fB<39 then local Id=(PB[0X5]);local ld=((PB[0x7]-0X01)*0X32);local dd=Dy[Id];do for zd=1,Cy-Id do dd[ld+zd]=Dy[Id+zd];end;end;else if fB==0X28 then local sF=PB[0X5];Dy[sF]=Dy[sF](Dy[sF+1],Dy[sF+2]);Cy=sF;else do if not(not(Dy[PB[0x4]]<=PB[0X3]))then else ry=PB[0X0005];end;end;end;end;else if not(fB<0X00002A)then if fB==0X2B then if PB[0x00007]==4 then ry=ry-1;do f1[ry]={[5]=(PB[0X5]-0X00013),[4]=(PB[0x4]-0x13),[2]=0x002a};end;else local HM=PB[0X05];for C4=HM,HM+(PB[0X4]-1)do Dy[C4]=ky[r1+(C4-HM)+0X001];end;end;else do if PB[7]~=232 then Dy[PB[0X5]]=nil;else ry=ry-0X01;(f1)[ry]={[0x04]=(PB[0X4]-0x033),[0x005]=(PB[0X5]-51),[2]=24};end;end;end;else local xl,sl=Py-r1,PB[0x05];if not(xl<0)then else xl=-1;end;do for kl=sl,sl+xl do do(Dy)[kl]=ky[r1+(kl-sl)+1];end;end;end;Cy=sl+xl;end;end;end;end;else do if fB>=0Xb then do if not(fB>=16)then if not(fB>=13)then if fB~=0xC then do(Dy)[PB[5]]=PB[0X0001];end;else local i4=PB[5];local f4=(W(function(...)(k)();do for GU in...do k(true,GU);end;end;end));(f4)(Dy[i4],Dy[i4+1],Dy[i4+2]);do Cy=i4;end;(Dy)[i4]=f4;do ry=PB[4];end;end;else if fB<14 then do Cy=PB[5];end;Dy[Cy]();do Cy=Cy-1;end;else do if fB==15 then if PB[0x7]==27 then ry=ry-0X1;(f1)[ry]={[5]=(PB[5]-93),[2]=0X55,[0x4]=(PB[0X4]-93)};elseif PB[7]~=0X00c then repeat local hS,dS=q1,(Dy);if#hS>0 then local CP=({});do for PK,oK in h,hS do for pN,UN in h,oK do do if not(UN[0X00001]==dS and UN[0X002]>=0)then else local MP=UN[0X2];do if not(not CP[MP])then else do(CP)[MP]={dS[MP]};end;end;end;UN[0X1]=CP[MP];(UN)[2]=1;end;end;end;end;end;end;until true;local FV=(PB[5]);return false,FV,FV;else do ry=ry-1;end;do f1[ry]={[4]=(PB[0X4]-113),[2]=83,[0x005]=(PB[0X005]-0X00071)};end;end;else local x0,D0=PB[0X5],(PB[4]);if D0==0 then else Cy=x0+D0-1;end;local l0,F0=nil,(nil);local g0=PB[0X007];if D0==0x1 then l0,F0=bc(Dy[x0]());else l0,F0=bc(Dy[x0](z(Dy,x0+0X1,Cy)));end;if g0==1 then Cy=x0-0x1;else do if g0~=0 then l0=x0+g0-0X2;do Cy=l0+1;end;else l0=l0+x0-1;Cy=l0;end;end;local tb=0;for gW=x0,l0 do do tb=tb+1;end;Dy[gW]=F0[tb];end;end;end;end;end;end;else if not(fB>=0x0013)then if fB>=0X000011 then do if fB==18 then(Dy)[PB[0X5]]=Dy[PB[4]]<Dy[PB[0x7]];else if not(not(Dy[PB[0X4]]<=Dy[PB[0X7]]))then else do ry=PB[0X5];end;end;end;end;else local kX=(PB[0X005]);Cy=kX+PB[4]-0X00001;Dy[kX](z(Dy,kX+0X1,Cy));do Cy=kX-0X1;end;end;else do if fB>=0X14 then if fB==21 then for Dj=PB[0x5],PB[0x4]do Dy[Dj]=nil;end;else if Dy[PB[4]]==Dy[PB[0X007]]then ry=PB[0X5];end;end;else local rq=(PB[0x5]);local bq,mq=Dy[rq]();if bq then Dy[rq+0X1]=mq;ry=PB[0X4];end;end;end;end;end;end;else if not(fB>=0x5)then if fB>=0X0002 then if fB<3 then(Dy)[PB[5]]=Dy[PB[4]]-Dy[PB[7]];else if fB~=0X004 then(Dy[PB[0X005]])[PB[1]]=PB[0X3];else local CU=PB[0X0005];(Dy[CU])(Dy[CU+0X001]);Cy=CU-0x1;end;end;else if fB==1 then do(Gy)[PB[1]]=Dy[PB[5]];end;else local Mm=(PB[0X00005]);local Em,Am,Um=Dy[Mm]();do if Em then Dy[Mm+1]=Am;Dy[Mm+2]=Um;ry=PB[0x4];end;end;end;end;else if not(fB>=0X008)then if not(fB<6)then if fB==7 then local AI=PB[5];local cI,yI=Dy[AI]();if cI then for U5=0X001,PB[7]do do Dy[AI+U5]=yI[U5];end;end;do ry=PB[0X0004];end;end;else local Sa=(O1[PB[4]]);local ea=(Sa[0X1]);local La,Ha=#ea,(nil);if not(La>0X0)then else Ha={};for Hs=0X001,La do local Vs=ea[Hs];if Vs[1]==0 then Ha[Hs-0x1]={Dy,Vs[0X2]};else Ha[Hs-1]=g1[Vs[2]];end;end;(r)(q1,Ha);end;Dy[PB[0X5]]=Rc(Gy,Sa,Ha);end;else if PB[7]~=0X0A9 then do(Dy)[PB[5]]=#Dy[PB[0X04]];end;else do ry=ry-1;end;(f1)[ry]={[0X00005]=(PB[0X5]-173),[0X2]=70,[0X4]=(PB[4]-173)};end;end;else if not(fB>=9)then Dy[PB[5]]=Dy[PB[0X04]]==Dy[PB[7]];else if fB~=0XA then do Dy[PB[5]][Dy[PB[0X0004]]]=Dy[PB[0X0007]];end;else Dy[PB[5]]=-Dy[PB[4]];end;end;end;end;end;end;end;end;end;end);if Sy then if Oy then do if Xy~=1 then return Dy[yy](z(Dy,yy+1,Cy));else return Dy[yy]();end;end;elseif not(yy)then else return z(Dy,yy,Xy);end;else if F(Oy)=="string"then do if c(Oy,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if c(Oy,"^.-:%d+: ")then x("Luraph Script:"..(N1[ry-0X00001]or'(i\110t\101rnal\)')..':\032'..R(Oy),0X0);else x(Oy,0X0);end;else x(Oy,0X00000);end;end;end;else H1=function(...)local gL=(0X00001);local CL=(f());local DL,ZL={},(CL==D and W1 or CL);local FL=0X00000;local fL,GL=bc(...);do fL=fL-1;end;for C3=0,fL do do if not(r1>C3)then break;else(DL)[C3]=GL[C3+1];end;end;end;Fc[3]=p1;Fc[4]=DL;if not o1 then GL=nil;elseif u1 then DL[r1]={n=fL>=r1 and fL-r1+0X0001 or 0X0,z(GL,r1+1,fL+1)};end;if ZL~=CL then E(H1,ZL);end;while true do local iq=f1[gL];local Bq=iq[0X2];gL=gL+0x00001;return(function(l,g,...)local c;c=hookfunction(g[0][1][g[0][2]].new,function(...)local G=c(...);g[1][1][g[1][2]]=G;return G;end);end)(DL,g1,...);end;end;end;E(H1,W1);return H1;end;ac=0x004;do continue;end;end;end;elseif ac~=3 then function xc()local mt,Yt,Tt,et,wt,ht,Et,Xt=nil,nil,nil,nil,nil,nil,nil,(nil);for EI=0X0,16 do if not(EI<=0x00007)then do if EI<=11 then if not(EI<=9)then do if EI~=10 then do ht=0X1;end;do continue;end;else wt=Yt[8];continue;end;end;else do if EI==8 then(Yt)[0X11]=Y();else et=Y()-0X003745;continue;end;end;end;else if EI<=0x000D then do if EI~=0X000C then for Mf=0X1,et do do wt[Mf]={[4]="\065\113",[0x1]=J(),[4]=N(),[wc]=J(),[3]=J(),[7]=0xA5345F6,[5]=N(),[Bc]=N(),[0x02]=X()};end;end;continue;else Et={};end;end;else do if not(EI<=14)then if EI==15 then Yt[0X01]=Et;continue;else for xd=0X0001,X()do(Et)[xd]={J(),X()};end;end;else do Xt={};end;end;end;end;end;end;else do if not(EI<=3)then if not(EI<=5)then if EI==6 then do Tt=Y();end;else for RW=0x00001,Tt do local sW,jW,iW=nil,nil,nil;local MW=(0X03);repeat if not(MW<=0X0001)then do if MW~=0x02 then do sW=Y();end;MW=2;else jW=Y();do MW=0x0;end;end;end;else if MW==0X0 then iW=Y();MW=0X001;do continue;end;else for Ta=sW,jW do(Yt[6])[Ta]=iW;end;MW=4;end;end;until MW==0x4;end;end;else do if EI==4 then Yt[18]=J();else do(Yt)[16]=Y();end;end;end;end;else if EI<=1 then if EI==0X0 then else do mt={};end;end;else if EI==2 then Yt={nil,{},sc,sc,nil,{},nil,{},sc};continue;else(Yt)[0X009]=X();do continue;end;end;end;end;end;end;end;Yt[19]=Y();local kt=(J());local Nt,Kt,zt,dt=5,nil,nil,(nil);while Nt~=7 do do if Nt<=2 then do if Nt<=0 then do zt=J();end;Nt=0X00006;do continue;end;else do if Nt==1 then Yt[4]=V(kt,0X0002,1)~=0X0;do Nt=0x00003;end;continue;else do for s4=1,et do local W4=(0);local M4=(nil);repeat do if W4~=0x0 then for Ri,yi in ipairs(L)do local Xi=(p[yi]);local xi=M4[Xi];if xi==9 then local YN=(0X1);local zN,EN=nil,(nil);do while(true)do do if not(YN<=0x00000)then if YN==0X1 then do zN=mt[M4[yi]];end;YN=0X000;do continue;end;else do if EN then local V0=(nil);do for vs=0,2 do do if not(vs<=0X000)then if vs~=1 then(V0)[#V0+1]={M4,Xi};else V0=EN[0x2];do continue;end;end;else do(M4)[Xi]=EN[0X1];end;continue;end;end;end;end;end;end;break;end;else EN=Xt[zN];do YN=0X2;end;end;end;end;end;elseif xi==0X4 then(M4)[yi]=s4+M4[yi]+0X0001;end;end;W4=2;else M4=Yt[8][s4];W4=0x1;continue;end;end;until W4>=2;end;end;Nt=0X7;end;end;end;end;else if not(Nt<=4)then if Nt~=0X05 then dt=J()~=0;do Nt=4;end;else(Yt)[5]=V(kt,0x00001,1)~=0X0000;Nt=0X1;continue;end;else if Nt==0X3 then Kt=Y()-62000;do Nt=0X0;end;continue;else for mu=Hc,Kt do local Au=(0);local ru,Gu=nil,nil;repeat do if Au~=0 then do Gu=J();end;break;else do ru=nil;end;Au=0x0001;end;end;until(false);do mt[mu-1]=ht;end;do if Gu==0X24 then ru=G(qc(zt),Yc);elseif Gu==0X8F then ru=gc;elseif Gu==51 then do ru=s();end;elseif Gu==Qc then ru=ic;elseif Gu==5 then ru=G(qc(zt),Y());elseif Gu==0xb6 then ru=G(qc(zt),J());elseif Gu==0X00099 then do ru=w();end;elseif Gu==81 then ru=s();elseif Gu==0x08b then do ru=Y();end;elseif Gu==7 then do ru=Y();end;elseif Gu==0X0000Eb then ru=Y();end;end;local yu=({ru,{}});Au=0X2;do repeat if not(Au<=0)then if Au==0x1 then do ht=ht+1;end;Au=0;else(Xt)[ht]=yu;Au=1;end;else if dt then do(vc)[nc]=yu;end;do nc=nc+0X1;end;end;Au=0x3;end;until Au>2;end;end;Nt=0X2;end;end;end;end;end;Nt=1;repeat do if Nt~=0x00000 then Yt[15]=J();Nt=0X0;else do(Yt)[11]=J();end;Nt=2;end;end;until Nt>=0X2;Nt=0x4;local Zt=(nil);while Nt~=5 do if Nt<=1 then if Nt==0 then(Yt)[0X3]=X();Nt=0x00001;else Zt=Y()-0X0010623;Nt=0X0005;do continue;end;end;else do if Nt<=2 then(Yt)[uc]=Y();Nt=3;continue;else if Nt==0X3 then(Yt)[7]=X();do Nt=0X00;end;continue;else Yt[14]=J();Nt=2;continue;end;end;end;end;end;local Rt=Yt[0X02];do Nt=0x01;end;repeat if Nt~=0x000 then for HG=0x0,Zt-0X1 do Rt[HG]=xc();end;do Nt=0;end;continue;else return Yt;end;until(false);end;ac=0X0;else do(Fc)[0X2]=vc;end;do ac=0x00002;end;continue;end;end;end;end)(5,table,setmetatable,bit32.lshift,string,string.sub,0X7,select,6,coroutine,0xA2,string.unpack,"<\i8",type,nil,"<d",false,0X3,0X2,"\[\Zr5",1,string.match,bit32.band,unpack,0Xf,bit32.rshift,rawget,string.char,true,setfenv,256,getfenv,"","\#",string.byte,bit32.bnot,...);end;
